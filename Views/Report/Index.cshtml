@using EcoMart.Data.Enum
@using EcoMart.ViewModels
@model ReportViewModel

@{
    ViewData["Title"] = "Report Products";
}

<!-- Navbar -->
<nav class="layout-navbar container-xxl navbar navbar-expand-xl navbar-detached align-items-center bg-navbar-theme"
     id="layout-navbar">
    <div class="layout-menu-toggle navbar-nav align-items-xl-center me-4 me-xl-0 d-xl-none">
        <a class="nav-item nav-link px-0 me-xl-6" href="javascript:void(0)">
            <i class="bx bx-menu bx-md"></i>
        </a>
    </div>
    <div class="navbar-nav-right d-flex align-items-center" id="navbar-collapse">
        <!-- Search -->
        <div class="navbar-nav align-items-center">
            <form asp-action="Index">
                <input type="hidden" asp-for="FilterBy" />
                <div class="nav-item d-flex align-items-center">
                    <i class="bx bx-search bx-md"></i>
                    <input asp-for="Term" type="text" name="term" class="form-control border-0 shadow-none ps-1 ps-sm-2" placeholder="Search..." autocomplete="off" />
                </div>
            </form>
        </div>
        <!-- /Search -->
        <ul class="navbar-nav flex-row align-items-center ms-auto">
            <!-- User -->
            <li class="nav-item navbar-dropdown dropdown-user dropdown">
                <a class="nav-link dropdown-toggle hide-arrow p-0" href="javascript:void(0);" data-bs-toggle="dropdown">
                    <div class="avatar avatar-online">
                        <img src="../assets/img/avatars/1.png" alt class="w-px-40 h-auto rounded-circle" />
                    </div>
                </a>
                <ul class="dropdown-menu dropdown-menu-end">
                    <li>
                        <a class="dropdown-item">
                            <div class="d-flex">
                                <div class="flex-shrink-0 me-3">
                                    <div class="avatar avatar-online">
                                        <img src="../assets/img/avatars/1.png" alt class="w-px-40 h-auto rounded-circle" />
                                    </div>
                                </div>
                                <div class="flex-grow-1">
                                    <h6 class="mb-0">@ViewBag.UserName</h6>
                                    <small class="text-muted">@ViewBag.Role</small>
                                </div>
                            </div>
                        </a>
                    </li>
                    <li>
                        <div class="dropdown-divider my-1"></div>
                    </li>
                    <li>
                        <span class="dropdown-item m-0 p-0">
                            <form asp-area="" asp-controller="Account" asp-action="Logout">
                                <button class="w-100 text-start" style="border: none; background: none; color: inherit; height: 38px;"><i class="bx bx-power-off bx-md me-3 ms-3"></i> Logout</button>
                            </form>
                        </span>
                    </li>
                </ul>
            </li>
            <!--/ User -->
        </ul>
    </div>
</nav>
<!--/ Navbar -->

<!-- Content wrapper -->
<div class="content-wrapper">
    <!-- Content -->
    <div class="container-xxl flex-grow-1 container-p-y">

        <div class="row">
            <div class="col-md-12">

                <div class="card mb-6">
                    <div class="card-body">
                        <div class="d-flex align-items-start align-items-sm-center gap-6 pb-4 justify-content-between mb-3">
                            <div class="button-wrapper">
                                <label class="badge bg-label-primary me-3 mb-4" style="cursor: default">
                                    <i class="bx bx-error"></i>
                                </label>
                                <span class="text-primary fw-bold">Product Reports</span>
                            </div>
                            <div class="button-wrapper">
                                <a class="btn btn-primary btn-icon dropdown-toggle hide-arrow text-white mb-4" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class='bx bx-filter'></i>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end">
                                    <li><a class="dropdown-item" href="/Report/Index">None</a></li>
                                    @foreach (var item in Enum.GetValues(typeof(ReportStatus)).Cast<ReportStatus>()) {
                                        <li><a class="dropdown-item" href="/Report/Index?filterBy=@((int)item)">@item</a></li>
                                    }
                                </ul>
                            </div>
                        </div>

                        <div class="row mb-4 g-3">
                            <div class="table-responsive text-nowrap">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th class="text-center">No</th>
                                            <th class="text-center">Report ID</th>
                                            <th class="text-center">Order ID</th>
                                            <th>Product Name</th>
                                            <th>Report Type</th>
                                            <th>Report Text</th>
                                            <th>Report Date</th>
                                            <th class="text-center">Status</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (TempData["NoData"] != null) {
                                            <tr>
                                                <td colspan="8" class="text-center">@TempData["NoData"]</td>
                                            </tr>
                                        }
                                        @{ int rowIndex = (Model.CurrentPage - 1) * Model.PageSize; }
                                        @foreach (var item in Model.Reports) {
                                            rowIndex++;
                                            <tr>
                                                <td class="text-center">@rowIndex</td>
                                                <td class="text-center">@item.Id</td>
                                                <td class="text-center">@item.OrderId</td>
                                                <td>@item.Product.ProductName</td>
                                                <td>@item.ReportType</td>
                                                <td>
                                                    @{ var reportText = item.ReportText.Length > 25 ? item.ReportText.Substring(0, 25) + "..." : item.ReportText; }
                                                    @reportText
                                                </td>
                                                <td>@item.ReportDate</td>
                                                <td class="text-center">
                                                    @if (item.ReportStatus == ReportStatus.Pending) {
                                                        <button type='button' class='btn btn-sm btn-warning w-100' data-bs-toggle="modal" data-bs-target="#modalEdit" data-id="@item.Id">@item.ReportStatus</button>
                                                    } else if (item.ReportStatus == ReportStatus.Resolved) {
                                                        <button type='button' class='btn btn-sm btn-success w-100' data-bs-toggle="modal" data-bs-target="#modalDetail" data-id="@item.Id">@item.ReportStatus</button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            @if (Model.TotalPages > 1) {
                                <div class="d-flex justify-content-end mt-6">
                                    <nav aria-label="Page navigation">
                                        <ul class="pagination">
                                            @if (Model.CurrentPage > 1) {
                                                <li class="page-item prev">
                                                    <a class="page-link" href="/Report/Index?term=@Model.Term&currentPage=@(Model.CurrentPage-1)">
                                                        <i class="tf-icon bx bx-chevron-left bx-sm"></i>
                                                    </a>
                                                </li>
                                            }
                                            @for (int i = 1; i <= Model.TotalPages; i++) {
                                                @if (i == Model.CurrentPage) {
                                                    <li class="page-item active">
                                                        <a class="page-link" href="/Report/Index?term=@Model.Term&currentPage=@i">@i</a>
                                                    </li>
                                                } else {
                                                    <li class="page-item">
                                                        <a class="page-link" href="/Report/Index?term=@Model.Term&currentPage=@i">@i</a>
                                                    </li>
                                                }
                                            }
                                            @if (Model.CurrentPage < Model.TotalPages) {
                                                <li class="page-item next">
                                                    <a class="page-link" href="/Report/Index?term=@Model.Term&currentPage=@(Model.CurrentPage+1)">
                                                        <i class="tf-icon bx bx-chevron-right bx-sm"></i>
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </nav>
                                </div>
                            }

                        </div>
                    </div>
                </div>

            </div>
        </div>

    </div>
    <!-- / Content -->
    <div class="content-backdrop fade"></div>
</div>
<!-- Content wrapper -->

<!-- MODAL EDIT -->
<div class="modal fade" id="modalEdit" data-bs-backdrop="static" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="button-wrapper">
                    <label class="badge bg-label-primary me-3">
                        <i class="bx bx-error"></i>
                    </label>
                    <span class="text-primary fw-bold">Resolved Report</span>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Id</label>
                    <span>:</span>
                    <p id="eId" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Order Id</label>
                    <span>:</span>
                    <p id="eOrderId" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Product Name</label>
                    <span>:</span>
                    <p id="eProductName" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Type</label>
                    <span>:</span>
                    <p id="eReportType" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Text</label>
                    <span>:</span>
                    <p id="eReportText" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Date</label>
                    <span>:</span>
                    <p id="eReportDate" class="text-wrap"></p>
                </div>
                <form method="post" asp-action="Edit" id="editForm">
                    <input type="hidden" asp-for="EditReportVM.ProductId" id="ProductId" />
                    <input type="hidden" asp-for="EditReportVM.ReportDate" id="ReportDate" />
                    <input type="hidden" asp-for="EditReportVM.Id" name="id" id="Id" />
                    <input type="hidden" asp-for="EditReportVM.OrderId" id="OrderId" />
                    <input type="hidden" asp-for="EditReportVM.ReportType" id="ReportType" />
                    <input type="hidden" asp-for="EditReportVM.ReportText" id="ReportText" />
                    <div class="form mb-3">
                        <label for="ResolutionText" class="text-primary">Resolution Text</label><span id="valResolutionText" class="text-danger ms-1"></span>
                        <textarea asp-for="EditReportVM.ResolutionText" id="ResolutionText" class="form-control" rows="3" placeholder="Resolution Text"></textarea>
                    </div>
                    <div class="d-flex justify-content-end mt-6 gap-2">
                        <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!-- / MODAL EDIT -->

<!-- MODAL DETAIL -->
<div class="modal fade" id="modalDetail" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <div class="button-wrapper">
                    <label class="badge bg-label-primary me-3">
                        <i class="bx bx-error"></i>
                    </label>
                    <span class="text-primary fw-bold">Resolved Report</span>
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Id</label>
                    <span>:</span>
                    <p id="dId" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Order Id</label>
                    <span>:</span>
                    <p id="dOrderId" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Product Name</label>
                    <span>:</span>
                    <p id="dProductName" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Type</label>
                    <span>:</span>
                    <p id="dReportType" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Text</label>
                    <span>:</span>
                    <p id="dReportText" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Report Date</label>
                    <span>:</span>
                    <p id="dReportDate" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Resolution Text</label>
                    <span>:</span>
                    <p id="dResolutionText" class="text-wrap"></p>
                </div>
                <div class="d-flex gap-2 mb-3 border-bottom">
                    <label class="text-primary col-4 col-lg-2 col-md-4 col-sm-4">Resolution Date</label>
                    <span>:</span>
                    <p id="dResolutionDate" class="text-wrap"></p>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- / MODAL DETAIL -->

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var modalEdit = document.getElementById('modalEdit');
            var modalDetail = document.getElementById('modalDetail');

            modalEdit.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget; // btn trigger
                var reportId = button.getAttribute('data-id'); // get id

                event.preventDefault();

                // req ajax
                fetch('/Report/GetReport/' + reportId)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    var valResolutionText = document.getElementById('valResolutionText');
                    valResolutionText.textContent = '';

                    let reportDate = new Date(data.reportDate);
                    let formattedReportDate = reportDate.toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit'
                    });

                    document.getElementById('Id').value = data.id;
                    document.getElementById('OrderId').value = data.orderId;
                    document.getElementById('ProductId').value = data.productId;
                    document.getElementById('ReportDate').value = data.reportDate;
                    document.getElementById('ReportType').value = data.reportType;
                    document.getElementById('ReportText').value = data.reportText;

                    document.getElementById('eId').textContent = data.id;
                    document.getElementById('eOrderId').textContent = data.orderId;
                    document.getElementById('eReportDate').textContent = formattedReportDate;
                    document.getElementById('eProductName').textContent = data.productName;
                    document.getElementById('eReportType').textContent = data.reportType;
                    document.getElementById('eReportText').textContent = data.reportText;

                    var bootstrapModal = new bootstrap.Modal(modalEdit);
                    bootstrapModal.show();
                })
                .catch(error => {
                    console.error('Error fetching report data:', error);
                    Swal.fire({
                        title: "Oops...",
                            text: 'Failed to retrieve report data. Please try again!',
                        icon: "error",
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    });
                    event.preventDefault();
                });
            });

            modalDetail.addEventListener('show.bs.modal', function (event) {
                var button = event.relatedTarget; // btn trigger
                var reportId = button.getAttribute('data-id'); // get id

                event.preventDefault();

                // req ajax
                fetch('/Report/GetReport/' + reportId)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    let resolutionDate = new Date(data.resolutionDate);
                    let reportDate = new Date(data.reportDate);
                    let formattedResolutionDate = resolutionDate.toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit'
                    });
                    let formattedReportDate = reportDate.toLocaleDateString('en-US', {
                        weekday: 'long',
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric',
                        hour: '2-digit',
                        minute: '2-digit',
                        second: '2-digit'
                    });

                    document.getElementById('dId').textContent = data.id;
                    document.getElementById('dOrderId').textContent = data.orderId;
                    document.getElementById('dReportDate').textContent = formattedReportDate;
                    document.getElementById('dProductName').textContent = data.productName;
                    document.getElementById('dReportType').textContent = data.reportType;
                    document.getElementById('dReportText').textContent = data.reportText;
                    document.getElementById('dResolutionText').textContent = data.resolutionText;
                    document.getElementById('dResolutionDate').textContent = formattedResolutionDate

                    var bootstrapModal = new bootstrap.Modal(modalDetail);
                    bootstrapModal.show();
                })
                .catch(error => {
                    console.error('Error fetching report data:', error);
                    Swal.fire({
                        title: "Oops...",
                            text: 'Failed to retrieve report data. Please try again!',
                        icon: "error",
                        customClass: {
                            popup: 'custom-swal-popup'
                        }
                    });
                    event.preventDefault();
                });
            });
        });

        document.getElementById('editForm').addEventListener('submit', function (event) {
            event.preventDefault();
            var resolutionText = document.getElementById('ResolutionText').value.trim();
            var valResolutionText = document.getElementById('valResolutionText');
            valResolutionText.textContent = '';

            if (resolutionText === '') {
                valResolutionText.textContent = '*Resolution text is required';
            } else {
                this.submit();
            }
        });

        document.getElementById('modalEdit').addEventListener('hidden.bs.modal', function () {
            var form = document.querySelector('#modalEdit form');
            form.reset();
            var valResolutionText = document.getElementById('valResolutionText');
            valResolutionText.textContent = '';
        });

        $(document).ready(function () {
            var successMessage = '@TempData["SuccessMessage"]';
            var errorMessage = '@TempData["ErrorMessage"]';

            if (successMessage) {
                Swal.fire({
                    title: "Success!",
                    text: successMessage,
                    icon: "success",
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
            }

            if (errorMessage) {
                Swal.fire({
                    title: "Error!",
                    text: errorMessage,
                    icon: "error",
                    customClass: {
                        popup: 'custom-swal-popup'
                    }
                });
            }
        });
    </script>
}